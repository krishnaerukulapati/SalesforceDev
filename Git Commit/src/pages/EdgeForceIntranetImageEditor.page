<apex:page docType="html-5.0" showHeader="false" sidebar="false"  standardController="Intranet_Content__c" >
    <apex:includeScript value="{!URLFOR($Resource.IntranetImageEditorRes, 'jquery-1.10.2.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.IntranetImageEditorRes, 'feather.js')}"/> 
    <script type="text/javascript" src="{!$Resource.IntranetDesign}/IntranetResp/html5shiv.js"></script> 
   <!-- <script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js" type="text/javascript"></script>
    <script src="http://feather.aviary.com/js/feather.js" type="text/javascript"></script> -->
    <script src="/soap/ajax/15.0/connection.js" type="text/javascript"></script>
    <script src="/soap/ajax/15.0/apex.js" type="text/javascript"></script>
    <script>
        $(document).ready(function(){
 

            
            //will contain the URL of the external image from Aviary.com after 'closing' the lightbox
            //but the image has to be brought to salesforce because the service will not host the image forver
            var fileName;
            var base64encoded;
    
            //fake input button doesn't show filename after selecting the image
            $("#fakeButton").click(function(){
                HandleBrowseClick();
            });
            
            //original input button
            $("#input-button").change(function(){
                //$("#image").hide();
                readURL(this);
            });
    
            //Aviary Web Editor specific codes. Refer -> http://www.aviary.com/web/documentation
            var featherEditor = new Aviary.Feather({
                //Put your Aviary.com API key and Version here
                apiKey: 'qvjobsyu18s3t9xd',
                apiVersion: 3,
    
                theme: 'light',
                tools: 'enhance,crop,resize,orientation,text,effects,frames,stickers,brightness,contrast,saturation,sharpness,whiten,blemish,redeye,focus,warmth,colorsplash,draw',
                displayImageSize: true,
                //display the editor in minimum style so that custom styles can be applied easily
                //minimumStyling: true,
                //give any div Id so that the editor will appear inside, instead of a lightbox
                //appendTo: 'anyDivId',
                //uncomment if you don't want to display the close button
                //noCloseButton: 'true',
                maxSize: 800,
                fileFormat: 'png',
                cropPresets: [
                    'Original',
                    ['Square', '1:1'],
                    'Custom',
                    '4:3', '16:9'
                ],
                onLoad: function() {
                    //customise the editor after init
                    //$("#avpw_controls").css({ "width": "300px" });
                },
                onReady: function() {
                    //customise the editor after ready
    
                },
                onSave: function(imageID, newURL) {
                    var img = document.getElementById(imageID);
                    img.src = newURL;
                    decodeCanvas();
                    save();
                    featherEditor.close();
                     //window.parent.location = window.parent.location;
                    //alert('Added to attachments');
                },
                onClose: function(isDirty) {
                    if(isDirty){
                        //if the user closes the editor without saving (after alerted)
                        alert("You didn't save the image properly! Original image will be saved.");
                    }
                    //decodeCanvas();
                    //save();
                },
                onError: function(errorObj) {
                    console.log(errorObj.message);
                }
                
            
            });
    
            function launchEditor(id, src) {
                featherEditor.launch({
                    image: id,
                    url: src
                });
    
                //to remove the branding, go to http://www.aviary.com/about/pricing
                //pay for premium add-ons and uncomment the following line
                //$(".avpw_footer_text").hide();
    
                //this portion will help save the image in case the user presses the close button without modifying and saving
                $(".avpw_close_inner").click(function(){
                    if(base64encoded == undefined){
                        //alert("base64encoded is undefined");
                        decodeCanvas();
                    }
                });
                return false;
            }
    
            //HTML5 file API
            function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = (function(theFile) {
                    return function(e) {
                        fileName = theFile.name;
                        $('#image').attr('src', e.target.result).css({ "maxWidth": "80%", "maxHeight": "80%" });
                        console.log("URL IS******* "+e.target.result);
                        //launches the Aviary image editor
                        launchEditor('image', e.target.result);
                    };
                })(input.files[0]);
                reader.readAsDataURL(input.files[0]);
            } else {
               alert("feature not supported");

            }
        }
    
            function HandleBrowseClick(){
                $("#input-button").click();
            }
    
            //this will capture the canvas from the editor lightbox, convert it to base64 and save that to a global variable
            function decodeCanvas(){
                var myCanvas = document.getElementById("avpw_canvas_element");
                base64encoded = myCanvas.toDataURL();
            }
    
            //this will show the img on html and alert out the base64 encoded data
            function save(){
                $("#image").show();
                var recid="{!$CurrentPage.parameters.id}"
                //alert(base64encoded);
                sforce.connection.sessionId = '{!$Api.Session_ID}';
                sforce.apex.execute("IntranetResizeImageController", "saveThumbNail", {url:base64encoded,recid:recid,fileName:fileName});
                
            }
        });
    

    </script>
    
    <center><button id="fakeButton" >Browse</button></center>
    <input type='file' id="input-button" accept="image/*" style="display: none"/><br/>
    <img id="image" src="#" alt="image goes here" style="display:none;"/> 

     
</apex:page>