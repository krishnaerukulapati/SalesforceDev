@isTest
global class HeroesCheckInContTest {
	@isTest 
	static void ViewHighlights() {
        Campaign camp = new Campaign(Name='testparent',EventID__c='123456', EVM_EventID__c='123456', DGGCampaignId__c = '12354123');
        insert camp;
        camp = new Campaign(Name='test',EventID__c='123456', ParentId = camp.Id, EVM_EventID__c='123456', DGGCampaignId__c = '12354123');
        insert camp;

		Lead c = new Lead();
		c.LastName = 'test';
		c.ConstituentID__c = 'notaquid';
		c.Constituent_Type__c = 'INDIVIDUAL';
		c.Company = 'fake';
		c.TR_ID__c = '123456';
		c.EventID__c = '123456';
		c.CurrentCampaign__c = camp.Id;
        
        insert c;

        C360Settings__c setting = new C360Settings__c();
        setting.Name = 'Master';
        setting.C360SettingsURL__c = 'dummy';
        insert setting;

        Test.startTest();
        
        PageReference pageRef = Page.HeroesCheckIn;
        Test.setCurrentPage(pageRef);
        Test.setMock(WebServiceMock.class, new HeroesCheckInContMock());

        ApexPages.currentPage().getParameters().put('relId', c.id);

        HeroesCheckInController ccac = new HeroesCheckInController();
        ccac.CheckIn();

    	Test.stopTest();
	}
  
	global class HeroesCheckInContMock implements WebServiceMock {
		global void doInvoke(Object stub, Object request,
	        Map<String, Object> response, String endpoint,
	        String soapAction, String requestName,
	        String responseNS, String responseName,
	        String responseType) {

	        // Create response element from the autogenerated class.
	        // Populate response element.
	        // Add response element to the response parameter, as follows:
	        if (requestName == 'DataRequest') {
	            soapStjudeOrg.DataResponse_element de = new soapStjudeOrg.DataResponse_element();
	            objectSoapStjudeOrg.Attribute att = new objectSoapStjudeOrg.Attribute();

	            att.Desc_x = 'xyz';
	            att.ID = 'abc';
	            att.Name = 'name';

	            objectSoapStjudeOrg.Attribute[] atts = new objectSoapStjudeOrg.Attribute[] 
	            { att };

	            de.Result = atts;
	            response.put('response_x', de);
	        }
	        else if(requestName == 'GetConstituentXRefsRequest') {
				soapStjudeOrg.GetConstituentXRefsResponse_element gcre = new soapStjudeOrg.GetConstituentXRefsResponse_element();

				gcre.Constituent360XRef = new domainSoapStjudeOrg.Constituent360XRef();
				gcre.Constituent360XRef.Constituents = new domainSoapStjudeOrg.ConstituentBase[] {
					new domainSoapStjudeOrg.ConstituentBase()
				};
				gcre.Constituent360XRef.Constituents.get(0).SystemXRef = new domainSoapStjudeOrg.SystemXRef();
				gcre.Constituent360XRef.Constituents.get(0).SystemXRef.Sys = new domainSoapStjudeOrg.Sys();
				gcre.Constituent360XRef.Constituents.get(0).SystemXRef.XRefKey = 'xrefkey';
	            gcre.Constituent360XRef.Constituents.get(0).SystemXRef.Sys.Name = 'name';

	            response.put('response_x', gcre); 
	        }
	        else if(requestName == 'RemovePropertyRequest') {
	            soapStjudeOrg.RemovePropertyResponse_element gcre = new soapStjudeOrg.RemovePropertyResponse_element();

	        	gcre.Result = 'yep';
	                            
	            response.put('response_x', gcre); 
	        }
	       	else if(requestName == 'GetConstituentRequest') {
	            soapStjudeOrg.GetConstituentResponse_element gcre = new soapStjudeOrg.GetConstituentResponse_element();
	            gcre.Constituent = new domainSoapStjudeOrg.Constituent();
	            gcre.Constituent.ConstituentId = 'notaguid';
	            gcre.Constituent.firstName = 'test';
	            gcre.Constituent.lastName = 'test';
	            gcre.Constituent.Title = new domainSoapStjudeOrg.TypeAttribute();
	            gcre.Constituent.Title.Code = 'test';
	            gcre.Constituent.Profile = new domainSoapStjudeOrg.Profile();
	            domainSoapStjudeOrg.Phone ph = new domainSoapStjudeOrg.Phone();
	            ph.ContactID = 'doesnt';
	            ph.PhoneNumber = '1231231234';
	            ph.PhoneType = new domainSoapStjudeOrg.TypeAttribute();
	            gcre.Constituent.Profile.Phones = new domainSoapStjudeOrg.Phone[] { ph };

	            domainSoapStjudeOrg.Email email = new domainSoapStjudeOrg.Email();
	            email.EmailAddress = 'test';
	            email.EmailType = new domainSoapStjudeOrg.TypeAttribute();
	    		gcre.Constituent.Profile.Emails = new domainSoapStjudeOrg.Email[] { email };

	            domainSoapStjudeOrg.Address addr = new domainSoapStjudeOrg.Address();
	            addr.street1 = 'test';
	            addr.AddressType = new domainSoapStjudeOrg.TypeAttribute();
		        gcre.Constituent.Profile.Addresses = new domainSoapStjudeOrg.Address[] { addr };

		        domainSoapStjudeOrg.Property p = new domainSoapStjudeOrg.Property();
		        p.Property = 'VIP_YES';
		        gcre.Constituent.Properties = new domainSoapStjudeOrg.Property[] { p };

		        domainSoapStjudeOrg.Preference pref = new domainSoapStjudeOrg.Preference();
		        gcre.Constituent.Preferences = new domainSoapStjudeOrg.Preference[] {pref};

		        domainSoapStjudeOrg.Interaction i = new domainSoapStjudeOrg.Interaction();
		        gcre.Constituent.Interactions = new domainSoapStjudeOrg.Interaction[] {i};

	            domainSoapStjudeOrg.Staff stf = new domainSoapStjudeOrg.Staff();
	            stf.Name = 'blah';
	            gcre.Constituent.Staff = stf;

	            domainSoapStjudeOrg.TypeAttribute typ = new domainSoapStjudeOrg.TypeAttribute();
	            typ.Code = 'Individual';
	            gcre.Constituent.Type_x = typ;

	    		gcre.Constituent.Profile.FinancialProfile = new domainSoapStjudeOrg.FinancialProfile();

	            response.put('response_x', gcre); 
	        }
	        else {
	            soapStjudeOrg.CreateConstituentResponse_element ccre = new soapStjudeOrg.CreateConstituentResponse_element();
	            ccre.CreatedConstituent = new domainSoapStjudeOrg.Constituent();
	            ccre.CreatedConstituent.ConstituentId = 'notaguid';
	            
	            response.put('response_x', ccre);
	        }
	    }
	}
}