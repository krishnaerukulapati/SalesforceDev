@isTest
global class C360CaseFromLeadContTest {
	
	
    @isTest static void SaveWithLead() {
        //relConsId = ApexPages.currentPage().getParameters().get('relConsId');
        //relConsType = ApexPages.currentPage().getParameters().get('relConsType');

        C360Settings__c setting = new C360Settings__c();
        setting.Name = 'Master';
        setting.C360SettingsURL__c = 'dummy';
        insert setting;

        Lead l = new Lead();
        l.LastName = 'hello';
        l.Company = 'company';
        l.account_id__c = '123456';
        upsert l;

        PageReference pageRef = Page.C360CaseFromLead;
        Test.setCurrentPage(pageRef);
        Test.setMock(WebServiceMock.class, new C360CaseFromLeadControllerMock());
        Test.startTest();

        ApexPages.currentPage().getParameters().put('leadid', l.Id);

        C360CaseFromLeadController cac = new C360CaseFromLeadController(new ApexPages.StandardController(l));
        cac.OpenConsole();



		Test.stopTest();

    }

    @isTest static void SaveWithNoLead() {
        Case c = new Case();
        insert c;    
        //relConsId = ApexPages.currentPage().getParameters().get('relConsId');
        //relConsType = ApexPages.currentPage().getParameters().get('relConsType');

        C360Settings__c setting = new C360Settings__c();
        setting.Name = 'Master';
        setting.C360SettingsURL__c = 'dummy';
        insert setting;

        PageReference pageRef = Page.C360CaseFromLead;
        Test.setCurrentPage(pageRef);
        Test.setMock(WebServiceMock.class, new C360CaseFromLeadControllerMock());
        ApexPages.currentPage().getParameters().put('consId', 'some cons id');


        Test.startTest();


        C360CaseFromLeadController cac = new C360CaseFromLeadController(new ApexPages.StandardController(new Lead()));
        cac.OpenConsole();

		Test.stopTest();

    }

	global class C360CaseFromLeadControllerMock implements WebServiceMock {
		global void doInvoke(
			Object stub,
			Object request,
			Map<String, Object> response,
			String endpoint,
			String soapAction,
			String requestName,
			String responseNS,
			String responseName,
			String responseType) {

			// Create response element from the autogenerated class.
			// Populate response element.
			// Add response element to the response parameter, as follows:
            if (requestName == 'CreateInteractionRequest') {
                soapStjudeOrg.CreateInteractionResponse_element cire = new soapStjudeOrg.CreateInteractionResponse_element();
                cire.Result = 'result';

                response.put('response_x', cire);
            }
            if (requestName == 'EditInteractionRequest') {
                soapStjudeOrg.EditInteractionResponse_element cire = new soapStjudeOrg.EditInteractionResponse_element();
                cire.Result = 'result';

                response.put('response_x', cire);
            }
            else if (requestName == 'DataRequest') {
                soapStjudeOrg.DataResponse_element de = new soapStjudeOrg.DataResponse_element();
                objectSoapStjudeOrg.Attribute att = new objectSoapStjudeOrg.Attribute();

                att.Desc_x = 'xyz';
                att.ID = 'abc';
                att.Name = 'name';

                objectSoapStjudeOrg.Attribute[] atts = new objectSoapStjudeOrg.Attribute[] 
                { att };

                de.Result = atts;
                response.put('response_x', de);
            }
			else if(requestName == 'GetConstituentRequest') {
				soapStjudeOrg.GetConstituentResponse_element gcre = new soapStjudeOrg.GetConstituentResponse_element();
				gcre.Constituent = new domainSoapStjudeOrg.Constituent();
				gcre.Constituent.Type_x = new domainSoapStjudeOrg.TypeAttribute();
				gcre.Constituent.Type_x.code = 'hay!';
				gcre.Constituent.ConstituentId = 'notaguid';
				response.put('response_x', gcre); 
			}
			else if(requestName == 'EditConstituentRequest') {
				soapStjudeOrg.EditConstituentResponse_element ecre = new soapStjudeOrg.EditConstituentResponse_element();
				ecre.Result = 'Result';
				response.put('response_x', ecre); 
			}
			else if(requestName == 'CreateConstituentRequest') {
				soapStjudeOrg.CreateConstituentResponse_element ccre = new soapStjudeOrg.CreateConstituentResponse_element();
				ccre.CreatedConstituent = new domainSoapStjudeOrg.Constituent();
				ccre.CreatedConstituent.ConstituentId = 'notaguid';
				response.put('response_x', ccre); 
			}
            else if(requestName == 'GetPreferencesRequest') {
                soapStjudeOrg.GetPreferencesResponse_element ecre = new soapStjudeOrg.GetPreferencesResponse_element();
                domainSoapStjudeOrg.Preference p = new domainSoapStjudeOrg.Preference();
                p.PreferenceId = 'doesnt';
                ecre.Preferences = new domainSoapStjudeOrg.Preference[] { p };
                response.put('response_x', ecre); 
            }
            else if(requestName == 'EditPreferenceRequest') {
                soapStjudeOrg.EditPreferenceResponse_element ecre = new soapStjudeOrg.EditPreferenceResponse_element();
                ecre.Result = 'Result';
                response.put('response_x', ecre); 
            }
            else if(requestName == 'CreatePreferenceRequest') {
                soapStjudeOrg.CreatePreferenceResponse_element ecre = new soapStjudeOrg.CreatePreferenceResponse_element();
                ecre.Result = 'Result';
                response.put('response_x', ecre); 
            }
            else if(requestName == 'SetPropertyRequest') {
                soapStjudeOrg.SetPropertyResponse_element ecre = new soapStjudeOrg.SetPropertyResponse_element();
                ecre.Result = 'result';

                response.put('response_x', ecre); 
            }
            else if(requestName == 'EditPreferenceRequest') {
                soapStjudeOrg.EditPreferenceResponse_element ecre = new soapStjudeOrg.EditPreferenceResponse_element();
                ecre.Result = 'Result';
                response.put('response_x', ecre); 
            }
            else if(requestName == 'CreatePreferenceRequest') {
                soapStjudeOrg.CreatePreferenceResponse_element ecre = new soapStjudeOrg.CreatePreferenceResponse_element();
                ecre.Result = 'Result';
                response.put('response_x', ecre); 
            }
            else if(requestName == 'SearchConstituents360Request') {
                soapStjudeOrg.SearchConstituents360Response_element gcre = new soapStjudeOrg.SearchConstituents360Response_element();
                gcre.TotalResults = 9;
                objectSoapStjudeOrg.SearchResponse con = new objectSoapStjudeOrg.SearchResponse();

        		gcre.Constituents = new objectSoapStjudeOrg.SearchResponse[] { con };
                                
                response.put('response_x', gcre); 
            }
            else if(requestName == 'GetPreferencesRequest') {
                soapStjudeOrg.GetPreferencesResponse_element gcre = new soapStjudeOrg.GetPreferencesResponse_element();
  
        		gcre.Preferences = new domainSoapStjudeOrg.Preference[] {
                	new domainSoapStjudeOrg.Preference()
                };
                                
                response.put('response_x', gcre); 
            }
            else if(requestName == 'GetPropertiesRequest') {
                soapStjudeOrg.GetPropertiesResponse_element gcre = new soapStjudeOrg.GetPropertiesResponse_element();
  
        		gcre.Properties = new domainSoapStjudeOrg.Property[] {
                	new domainSoapStjudeOrg.Property()
                };
                                
                response.put('response_x', gcre); 
            }
            else if(requestName == 'RemovePropertyRequest') {
                soapStjudeOrg.RemovePropertyResponse_element gcre = new soapStjudeOrg.RemovePropertyResponse_element();
  
        		gcre.Result = 'yep';
                                
                response.put('response_x', gcre); 
            }
            else if(requestName == 'GetRelationshipsRequest') {
                soapStjudeOrg.GetRelationshipsResponse_element gcre = new soapStjudeOrg.GetRelationshipsResponse_element();
  
        		gcre.TotalResults = 1;
                                
                response.put('response_x', gcre); 
            }
            else if(requestName == 'RemovePropertyRequest') {
                soapStjudeOrg.RemovePropertyResponse_element gcre = new soapStjudeOrg.RemovePropertyResponse_element();
  
        		gcre.Result = 'yep';
                                
                response.put('response_x', gcre); 
            }
            else if(requestName == 'GetInteractionsRequest') {
                soapStjudeOrg.GetInteractionsResponse_element gcre = new soapStjudeOrg.GetInteractionsResponse_element();

                response.put('response_x', gcre); 
            }
            
            else if(requestName == 'GetConstituentXRefsRequest') {
                soapStjudeOrg.GetConstituentXRefsResponse_element gcre = new soapStjudeOrg.GetConstituentXRefsResponse_element();
                gcre.Constituent360XRef = new  domainSoapStjudeOrg.Constituent360XRef();
                domainSoapStjudeOrg.Constituent con = new domainSoapStjudeOrg.Constituent();
                con.ConstituentId = 'test';

                gcre.Constituent360XRef.Constituents = new domainSoapStjudeOrg.Constituent[] {con};

                response.put('response_x', gcre); 
            }
            else if (requestName == 'GetTransactionsRequest') {
                soapStjudeOrg.GetTransactionsResponse_element de = new soapStjudeOrg.GetTransactionsResponse_element();
                de.TotalResults = 50;

                response.put('response_x', de);
            }
		}
	}
}