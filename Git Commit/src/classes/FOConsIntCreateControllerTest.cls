@isTest
global class FOConsIntCreateControllerTest {
	
	@isTest static void creatInt() {
		Case c = new Case();
		insert c;    

		C360Settings__c setting = new C360Settings__c();
		setting.Name = 'Master';
		setting.C360SettingsURL__c = 'dummy';
		insert setting;


	    Test.startTest();
	    PageReference pageRef = Page.FOConsIntCreate;
	    Test.setCurrentPage(pageRef);
    	ApexPages.currentPage().getParameters().put('id', c.id);
    	ApexPages.currentPage().getParameters().put('consId', 'consId');

	    Test.setMock(WebServiceMock.class, new FOConsIntCreateContMock());

		FOConsIntCreateController intC = new FOConsIntCreateController();
		intC.save();

		intC.i.ContactCategory = 'test';
		intC.i.ContactType = 'test';
		intC.i.ResponseCategory = 'test';
		intC.i.TransactionSource.Technique = 'test';
		intC.warning = true;
		intC.i.WarningExpirationDate = '2009-01-01';
		intC.save();

		intC.i.ResponseType = 'test';
		intC.i.ResponseCategory = '';
		intC.save();

		intC.i.ResponseCategory = 'test';
		intC.save();

		intC.i.LongComments = 'test';
		intC.save();

	    Test.stopTest();
	}

	@isTest static void editInt() {
		Case c = new Case();
		insert c;    

		C360Settings__c setting = new C360Settings__c();
		setting.Name = 'Master';
		setting.C360SettingsURL__c = 'dummy';
		insert setting;


	    Test.startTest();
	    PageReference pageRef = Page.FOConsIntCreate;
	    Test.setCurrentPage(pageRef);
    	ApexPages.currentPage().getParameters().put('id', c.id);
    	ApexPages.currentPage().getParameters().put('consId', 'consId');
        ApexPages.currentPage().getParameters().put('contDate', 'booger');

	    Test.setMock(WebServiceMock.class, new FOConsIntCreateContMock());

		FOConsIntCreateController intC = new FOConsIntCreateController();
		intC.save();

		intC.i.ContactCategory = 'test';
		intC.i.ContactType = 'test';
		intC.i.ResponseCategory = 'test';
		intC.i.TransactionSource.Technique = 'test';
		intC.warning = true;
		intC.i.WarningExpirationDate = '2009-01-01';
		intC.save();

		intC.i.ResponseType = 'test';
		intC.i.ResponseCategory = '';
		intC.save();

		intC.i.ResponseCategory = 'test';
		intC.save();

		intC.i.LongComments = 'test';
		intC.save();

	    Test.stopTest();
	}

	global class FOConsIntCreateContMock implements WebServiceMock {
		global void doInvoke(
			Object stub,
			Object request,
			Map<String, Object> response,
			String endpoint,
			String soapAction,
			String requestName,
			String responseNS,
			String responseName,
			String responseType) {

			// Create response element from the autogenerated class.
			// Populate response element.
			// Add response element to the response parameter, as follows:
			if (requestName == 'CreateInteractionRequest') {
				soapStjudeOrg.CreateInteractionResponse_element cire = new soapStjudeOrg.CreateInteractionResponse_element();
				cire.Result = 'result';

				response.put('response_x', cire);
			}
			if (requestName == 'EditInteractionRequest') {
				soapStjudeOrg.EditInteractionResponse_element cire = new soapStjudeOrg.EditInteractionResponse_element();
				cire.Result = 'result';

				response.put('response_x', cire);
			}
			else if(requestName == 'GetConstituentRequest') {
				soapStjudeOrg.GetConstituentResponse_element gcre = new soapStjudeOrg.GetConstituentResponse_element();
				gcre.Constituent = new domainSoapStjudeOrg.Constituent();
				gcre.Constituent.ConstituentId = 'notaguid';
				response.put('response_x', gcre); 
			}
			else if(requestName == 'EditConstituentRequest') {
				soapStjudeOrg.EditConstituentResponse_element ecre = new soapStjudeOrg.EditConstituentResponse_element();
				ecre.Result = 'Result';
				response.put('response_x', ecre); 
			}
		}
	}
	
}