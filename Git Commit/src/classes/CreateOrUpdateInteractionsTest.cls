@isTest
global class CreateOrUpdateInteractionsTest {
	@isTest
	static void CreateTask() {
        C360Settings__c setting = new C360Settings__c();
        setting.Name = 'Master';
        setting.C360SettingsURL__c = 'dummy';
        insert setting;

        Campaign c = new Campaign(
        	Name = 'Test Campaign');
        insert c;

        Lead l = new Lead(
        	LastName = 'Test',
        	Status = 'Open',
        	Company = 'Test',
        	TransSourceCode__c = '12345678910',
        	Account_id__c = '123456',
        	CurrentCampaign__c = c.id
        	);

        insert l;

        CampaignDispConfig__c cdc = new CampaignDispConfig__c(
        	Name = 'Test disp save',
        	Disp__c = 'Test disp save',
        	Action__c = 'Add Interaction',
        	Campaign__c = c.Id,
        	ContCat__c = 'TE',
        	ContType__c = 'TE',
        	Effort__c = 'EF',
        	Filter__c = 'Account',
        	RespCat__c = 'DR',
        	RespType__c = 'DRE'
        	);

        insert cdc;

        cdc = new CampaignDispConfig__c(
        	Name = 'Test disp save',
        	Disp__c = 'Test disp save',
        	Action__c = 'Update Interaction',
        	Campaign__c = c.Id,
        	ContCat__c = 'TE',
        	ContType__c = 'TE',
        	Effort__c = 'EF',
        	Filter__c = 'Account',
        	RespCat__c = 'DR',
        	RespType__c = 'DRE'
        	);

        insert cdc;
        
        Task tsk = new Task(
        	CallObject = 'aguid',
        	CallDisposition = 'Test disp save',
        	WhoId = l.Id
        	);

	    Test.startTest();

	    Test.setMock(WebServiceMock.class, new CreateOrUpdateInteractionsMock());
        insert tsk;
        Test.stopTest();
    }


	global class CreateOrUpdateInteractionsMock implements WebServiceMock {
		global void doInvoke(
			Object stub,
			Object request,
			Map<String, Object> response,
			String endpoint,
			String soapAction,
			String requestName,
			String responseNS,
			String responseName,
			String responseType) {

			// Create response element from the autogenerated class.
			// Populate response element.
			// Add response element to the response parameter, as follows:
			if (requestName == 'CreateInteractionRequest') {
				soapStjudeOrg.CreateInteractionResponse_element cire = new soapStjudeOrg.CreateInteractionResponse_element();
				cire.Result = 'result';

				response.put('response_x', cire);
			}
			if (requestName == 'EditInteractionRequest') {
				soapStjudeOrg.EditInteractionResponse_element cire = new soapStjudeOrg.EditInteractionResponse_element();
				cire.Result = 'result';

				response.put('response_x', cire);
			}
           	else if(requestName == 'GetConstituentRequest') {
                soapStjudeOrg.GetConstituentResponse_element gcre = new soapStjudeOrg.GetConstituentResponse_element();
                gcre.Constituent = new domainSoapStjudeOrg.Constituent();
                gcre.Constituent.ConstituentId = 'notaguid';
                gcre.Constituent.firstName = 'test';
                gcre.Constituent.lastName = 'test';
                gcre.Constituent.Title = new domainSoapStjudeOrg.TypeAttribute();
                gcre.Constituent.Title.Code = 'test';
                gcre.Constituent.Profile = new domainSoapStjudeOrg.Profile();
                domainSoapStjudeOrg.Phone ph = new domainSoapStjudeOrg.Phone();
                ph.ContactID = 'doesnt';
                ph.PhoneNumber = '1231231234';
                ph.PhoneType = new domainSoapStjudeOrg.TypeAttribute();
                gcre.Constituent.Profile.Phones = new domainSoapStjudeOrg.Phone[] { ph };

                domainSoapStjudeOrg.Email email = new domainSoapStjudeOrg.Email();
                email.EmailAddress = 'test';
                email.EmailType = new domainSoapStjudeOrg.TypeAttribute();
				gcre.Constituent.Profile.Emails = new domainSoapStjudeOrg.Email[] { email };

                domainSoapStjudeOrg.Address addr = new domainSoapStjudeOrg.Address();
                addr.street1 = 'test';
                addr.AddressType = new domainSoapStjudeOrg.TypeAttribute();
				gcre.Constituent.Profile.Addresses = new domainSoapStjudeOrg.Address[] { addr };

				domainSoapStjudeOrg.Property p = new domainSoapStjudeOrg.Property();
				p.Property = 'VIP_YES';
                p.Status = 'Active';
				gcre.Constituent.Properties = new domainSoapStjudeOrg.Property[] { p };

				domainSoapStjudeOrg.Preference pref = new domainSoapStjudeOrg.Preference();
				gcre.Constituent.Preferences = new domainSoapStjudeOrg.Preference[] {pref};

				domainSoapStjudeOrg.Interaction i = new domainSoapStjudeOrg.Interaction();
				gcre.Constituent.Interactions = new domainSoapStjudeOrg.Interaction[] {i};

                domainSoapStjudeOrg.Staff stf = new domainSoapStjudeOrg.Staff();
                stf.Name = 'blah';
                gcre.Constituent.Staff = stf;

                domainSoapStjudeOrg.TypeAttribute typ = new domainSoapStjudeOrg.TypeAttribute();
                typ.Code = 'Individual';
                gcre.Constituent.Type_x = typ;

				gcre.Constituent.Profile.FinancialProfile = new domainSoapStjudeOrg.FinancialProfile();

                response.put('response_x', gcre); 
            }
			else if(requestName == 'EditConstituentRequest') {
				soapStjudeOrg.EditConstituentResponse_element ecre = new soapStjudeOrg.EditConstituentResponse_element();
				ecre.Result = 'Result';
				response.put('response_x', ecre); 
			}
		}
	}
	
}