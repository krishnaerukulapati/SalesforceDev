@isTest
global class FODetailInteractionContTest {
	
	@isTest static void creatIntAct() {

		C360Settings__c setting = new C360Settings__c();
		setting.Name = 'Master';
		setting.C360SettingsURL__c = 'dummy';

		insert setting;
		Lead l = new Lead(
			LastName = 'Test name'
			, Company = 'Company'
			, ConstituentId__c = 'test');

		insert l;

		CodeLookups__c cl = new CodeLookups__c(
			CodeValue__c = 'AB'
			, CodeDescription__c = 'description'
			, CodeType__c = 'Technique');

		insert cl;

		FieldInteraction__c fi = new FieldInteraction__c(
			Program__c = 'DGG'
			, Description__c = 'CGI'
			, ContactCategory__c = 'AB'
			, ContactType__c = 'TEST');

		insert fi;

	    Test.startTest();
	    PageReference pageRef = Page.FOInteractionDetail;
	    Test.setCurrentPage(pageRef);
    	ApexPages.currentPage().getParameters().put('id', l.id);

	    Test.setMock(WebServiceMock.class, new FODetailInteractionContMock());

		FODetailInteractionController fo = new FODetailInteractionController();

		fo.getPrograms();
		fo.getDescriptions();
		fo.getTechniques();

		fo.fi.Program__c = 'DGG';

		fo.changePrograms();

		fo.fi.Description__c = 'CGI';
		fo.fi.Technique__c = 'description';
		fo.comments = 'temp';

		fo.save();

	    Test.stopTest();
	}


	global class FODetailInteractionContMock implements WebServiceMock {
		global void doInvoke(
			Object stub,
			Object request,
			Map<String, Object> response,
			String endpoint,
			String soapAction,
			String requestName,
			String responseNS,
			String responseName,
			String responseType) {

			// Create response element from the autogenerated class.
			// Populate response element.
			// Add response element to the response parameter, as follows:
			if (requestName == 'CreateInteractionRequest') {
				soapStjudeOrg.CreateInteractionResponse_element cire = new soapStjudeOrg.CreateInteractionResponse_element();
				cire.Result = 'result';

				response.put('response_x', cire);
			}
			if (requestName == 'EditInteractionRequest') {
				soapStjudeOrg.EditInteractionResponse_element cire = new soapStjudeOrg.EditInteractionResponse_element();
				cire.Result = 'result';

				response.put('response_x', cire);
			}
			else if(requestName == 'GetConstituentRequest') {
				soapStjudeOrg.GetConstituentResponse_element gcre = new soapStjudeOrg.GetConstituentResponse_element();
				gcre.Constituent = new domainSoapStjudeOrg.Constituent();
				gcre.Constituent.ConstituentId = 'notaguid';
				gcre.Constituent.Type_x = new domainSoapStjudeOrg.TypeAttribute();
				gcre.Constituent.Type_x.Code = 'INDIVIDUAL';
				response.put('response_x', gcre); 
			}
			else if(requestName == 'EditConstituentRequest') {
				soapStjudeOrg.EditConstituentResponse_element ecre = new soapStjudeOrg.EditConstituentResponse_element();
				ecre.Result = 'Result';
				response.put('response_x', ecre); 
			}
		}
	}
}